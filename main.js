(()=>{"use strict";var __webpack_modules__={877:()=>{eval("\n;// CONCATENATED MODULE: ./src/scripts/modal.js\nvar popupEdit = document.querySelector('.popup_form_edit');\nvar buttonInfo = document.querySelector('.profile-info__edit-button');\nvar profileName = document.querySelector('.profile-info__name');\nvar profileJob = document.querySelector('.profile-info__profession');\nvar popupFormInfo = document.querySelector('.popup__form_belong_profile');\nvar inputName = popupFormInfo.querySelector('.popup__field_belong_name');\nvar inputNote = popupFormInfo.querySelector('.popup__field_belong_note');\nvar popupAvatar = document.querySelector('.popup_form_avatar');\nvar avatarImage = document.querySelector('.profile__image');\nvar buttonImage = document.querySelector('.profile__image-container');\nvar popupFormAvatar = document.querySelector('.popup__form_belong_avatar');\nvar inputAvatar = popupFormAvatar.querySelector('.popup__field_belong_note');\nvar popupAdd = document.querySelector('.popup_form_add');\nvar buttonAdd = document.querySelector('.profile__add-button');\n\n;// CONCATENATED MODULE: ./src/scripts/utils.js\nfunction openPopup(item) {\n  item.classList.add('popup_opened');\n  document.addEventListener('click', closeOverlay);\n  document.addEventListener('keyup', closePopupEscape);\n}\nfunction closePopupEscape(evt) {\n  evt.preventDefault();\n  if (evt.key === 'Escape') {\n    var openedPopup = document.querySelector('.popup_opened');\n    openedPopup && closePopup(openedPopup);\n  }\n}\nfunction closeOverlay(evt) {\n  if (evt.target.classList.contains('popup')) {\n    closePopup(evt.target);\n  }\n}\nfunction closePopup(item) {\n  item.classList.remove('popup_opened');\n  document.removeEventListener('click', closeOverlay);\n  document.removeEventListener('keyup', closePopupEscape);\n}\nfunction renderLoading(isLoading, popupForm, word) {\n  if (isLoading) {\n    return popupForm.querySelector('.popup__button-save').textContent = 'Сохранение...';\n  } else {\n    return popupForm.querySelector('.popup__button-save').textContent = \"\".concat(word);\n  }\n}\n\n;// CONCATENATED MODULE: ./src/scripts/api.js\nvar config = {\n  baseUrl: 'https://nomoreparties.co/v1/plus-cohort-23',\n  headers: {\n    authorization: '43b4a3de-4bbd-4be1-abd1-bf011e8ef6fa',\n    'Content-Type': 'application/json'\n  }\n};\nfunction swapTextProfile(nikname, job) {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me\"), {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: nikname.value,\n      about: job.value\n    })\n  }).then(function (res) {\n    return returnError(res);\n  });\n}\nfunction downloadProfileInfo() {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me\"), {\n    headers: config.headers\n  }).then(function (res) {\n    return returnError(res);\n  });\n}\nfunction downloadCards() {\n  return fetch(\"\".concat(config.baseUrl, \"/cards\"), {\n    headers: config.headers\n  }).then(function (res) {\n    return returnError(res);\n  });\n}\nfunction deleteCard(cardId) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/\").concat(cardId), {\n    method: 'DELETE',\n    headers: config.headers\n  }).then(function (res) {\n    return returnError(res);\n  });\n}\nfunction addCardOnServer(namestate, linkimg) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards\"), {\n    method: 'POST',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: namestate.value,\n      link: linkimg.value\n    })\n  }).then(function (res) {\n    return returnError(res);\n  });\n}\nfunction addLike(cardId, meth) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/likes/\").concat(cardId), {\n    method: \"\".concat(meth),\n    headers: config.headers\n  }).then(function (res) {\n    return returnError(res);\n  });\n}\nfunction swapImage(avatarimg) {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me/avatar\"), {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: avatarimg.value\n    })\n  }).then(function (res) {\n    return returnError(res);\n  });\n}\nfunction returnError(item) {\n  if (item.ok) {\n    return item.json();\n  }\n  return Promise.reject(\"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A: \".concat(item.status));\n}\n\n;// CONCATENATED MODULE: ./src/scripts/card.js\n\nvar cardTemplate = document.querySelector('#card').content;\nvar cardsContainer = document.querySelector('.cards');\nvar popupZoom = document.querySelector('.popup_form_opened-image');\nvar popupImage = popupZoom.querySelector('.popup__image');\nvar popupText = popupZoom.querySelector('.popup__text');\nvar popupFormCreate = document.querySelector('.popup__form_belong_card');\nvar popupName = popupFormCreate.querySelector('.popup__field_belong_name');\nvar popupNote = popupFormCreate.querySelector('.popup__field_belong_note');\n\nfunction createCardTemplate(link, text, sum, buttonSwap, cardId, idLike, idPerson) {\n  var cardCloneElement = cardTemplate.querySelector('.card').cloneNode(true);\n  var buttonDelete = cardCloneElement.querySelector('.card__close');\n  var cardImage = cardCloneElement.querySelector('.card__image');\n  var cardTitle = cardCloneElement.querySelector('.card__title');\n  var cardLikeSumm = cardCloneElement.querySelector('.card__like-sum');\n  var cardLike = cardCloneElement.querySelector('.card__like');\n  cardImage.src = \"\".concat(link);\n  cardImage.alt = \"\".concat(text);\n  cardTitle.textContent = \"\".concat(text);\n  cardLikeSumm.textContent = \"\".concat(sum);\n  idLike.forEach(function (item) {\n    if (item._id === idPerson) {\n      cardLike.classList.add('card__like_active');\n    }\n  });\n  cardImage.addEventListener('click', function () {\n    openPopup(popupZoom);\n    popupImage.src = \"\".concat(cardImage.src);\n    popupImage.alt = \"\".concat(cardTitle.textContent);\n    popupText.textContent = \"\".concat(cardTitle.textContent);\n  });\n  buttonDelete.disabled = buttonSwap;\n  buttonDelete.addEventListener('click', function () {\n    var deleteItem = buttonDelete.closest('.card');\n    deleteCard(cardId).then(function () {\n      deleteItem.remove();\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  });\n  cardLike.addEventListener('click', function (evt) {\n    if (cardLike.classList.contains('card__like_active')) {\n      addLike(cardId, 'DELETE').then(function (item) {\n        evt.target.classList.remove('card__like_active');\n        cardLikeSumm.textContent = item.likes.length;\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    } else {\n      addLike(cardId, 'PUT').then(function (result) {\n        evt.target.classList.add('card__like_active');\n        cardLikeSumm.textContent = result.likes.length;\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  });\n  return cardCloneElement;\n}\n;\n\n;// CONCATENATED MODULE: ./src/scripts/validate.js\nvar _excluded = [\"inputSelector\", \"submitButtonSelector\"],\n  _excluded2 = [\"formSelector\"];\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nvar showInputError = function showInputError(formElement, inputElement, errorMessage, inputErrorClass, errorClass) {\n  var errorElement = formElement.querySelector(\".\".concat(inputElement.id, \"-error\"));\n  inputElement.classList.add(inputErrorClass);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(errorClass);\n};\nvar hideInputError = function hideInputError(formElement, inputElement, inputErrorClass, errorClass) {\n  var errorElement = formElement.querySelector(\".\".concat(inputElement.id, \"-error\"));\n  inputElement.classList.remove(inputErrorClass);\n  errorElement.classList.remove(errorClass);\n  errorElement.textContent = '';\n};\nvar checkInputValidity = function checkInputValidity(formElement, inputElement, _ref) {\n  var inputErrorClass = _ref.inputErrorClass,\n    errorClass = _ref.errorClass;\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity(\"\");\n  }\n  if (!inputElement.validity.valid) {\n    showInputError(formElement, inputElement, inputElement.validationMessage, inputErrorClass, errorClass);\n  } else {\n    hideInputError(formElement, inputElement, inputErrorClass, errorClass);\n  }\n};\nvar setEventListeners = function setEventListeners(formElement, _ref2) {\n  var inputSelector = _ref2.inputSelector,\n    submitButtonSelector = _ref2.submitButtonSelector,\n    arr = _objectWithoutProperties(_ref2, _excluded);\n  var inputList = Array.from(formElement.querySelectorAll(inputSelector));\n  var buttonElement = formElement.querySelector(submitButtonSelector);\n  toggleButtonState(inputList, buttonElement);\n  formElement.addEventListener('reset', function () {\n    disableButton(buttonElement);\n  });\n  inputList.forEach(function (inputElement) {\n    inputElement.addEventListener('input', function () {\n      checkInputValidity(formElement, inputElement, arr);\n      toggleButtonState(inputList, buttonElement);\n    });\n  });\n};\nvar enableValidation = function enableValidation(_ref3) {\n  var formSelector = _ref3.formSelector,\n    rest = _objectWithoutProperties(_ref3, _excluded2);\n  var formList = Array.from(document.querySelectorAll(formSelector));\n  formList.forEach(function (formElement) {\n    setEventListeners(formElement, rest);\n  });\n};\nfunction hasInvalidInput(inputList) {\n  return inputList.some(function (inputElement) {\n    return !inputElement.validity.valid;\n  });\n}\nfunction disableButton(buttonElement) {\n  buttonElement.disabled = true;\n}\nfunction toggleButtonState(inputList, buttonElement) {\n  if (hasInvalidInput(inputList)) {\n    disableButton(buttonElement);\n  } else {\n    buttonElement.disabled = false;\n  }\n}\n\n;// CONCATENATED MODULE: ./src/scripts/index.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\nbuttonImage.addEventListener('click', function () {\n  openPopup(popupAvatar);\n});\npopupFormAvatar.addEventListener('submit', function (evt) {\n  evt.preventDefault();\n  renderLoading(true, popupFormAvatar, 'Сохранить');\n  swapImage(inputAvatar).then(function (res) {\n    avatarImage.src = res.avatar;\n    closePopup(popupAvatar);\n    popupFormAvatar.reset();\n  }).catch(function (error) {\n    return console.log(error);\n  }).finally(function () {\n    renderLoading(false, popupFormAvatar, 'Сохранить');\n  });\n});\nbuttonInfo.addEventListener('click', function (evt) {\n  openPopup(popupEdit);\n  inputName.value = profileName.textContent;\n  inputNote.value = profileJob.textContent;\n});\nvar closeButtons = document.querySelectorAll('.popup__button-close');\ncloseButtons.forEach(function (item) {\n  item.addEventListener('click', function () {\n    closePopup(item.closest('.popup'));\n  });\n});\nbuttonAdd.addEventListener('click', function () {\n  openPopup(popupAdd);\n});\nenableValidation({\n  formSelector: '.popup__form',\n  inputSelector: '.popup__field',\n  submitButtonSelector: '.popup__button-save',\n  inputErrorClass: 'popup__field_type_error',\n  errorClass: 'popup__field-error_active'\n});\nPromise.all([downloadProfileInfo(), downloadCards()]).then(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    info = _ref2[0],\n    initialCards = _ref2[1];\n  profileName.textContent = info.name;\n  profileJob.textContent = info.about;\n  avatarImage.src = info.avatar;\n  return initialCards.forEach(function (item) {\n    var boolen = item.owner._id === info._id;\n    cardsContainer.append(createCardTemplate(item.link, item.name, item.likes.length, !boolen, item._id, item.likes, info._id));\n  });\n}).catch(function (error) {\n  return console.log(error);\n});\npopupFormCreate.addEventListener('submit', function (evt) {\n  evt.preventDefault();\n  renderLoading(true, popupFormCreate, 'Создать');\n  addCardOnServer(popupName, popupNote).then(function (item) {\n    cardsContainer.prepend(createCardTemplate(item.link, item.name, item.likes.length, false, item._id, item.likes, info._id));\n    popupFormCreate.reset();\n    closePopup(popupAdd);\n  }).catch(function (error) {\n    return console.log(error);\n  }).finally(function () {\n    renderLoading(false, popupFormCreate, 'Создать');\n  });\n});\npopupFormInfo.addEventListener('submit', function (evt) {\n  evt.preventDefault();\n  renderLoading(true, popupFormInfo, 'Сохранить');\n  swapTextProfile(inputName, inputNote).then(function (result) {\n    profileName.textContent = result.name;\n    profileJob.textContent = result.about;\n    closePopup(popupEdit);\n  }).catch(function (err) {\n    return console.log(err);\n  }).finally(function () {\n    renderLoading(false, popupFormInfo, 'Сохранить');\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///877\n")}},__webpack_exports__={};__webpack_modules__[877]()})();